spring.application.name=tweetApp

spring.data.mongodb.uri=mongodb+srv://parvnautiyal:Password0!@tweetcluster.esv3t68.mongodb.net/?retryWrites=true&w=majority
spring.data.mongodb.database=TweetApp

spring.kafka.bootstrap-servers=localhost:9092

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.IntegerSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.batch-size=100000

spring.kafka.admin.properties.bootstrap.servers=${spring.kafka.bootstrap-servers}
spring.kafka.template.default-topic=tweet-event

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
spring.kafka.consumer.value-deserializer =org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.group-id=tweet-event-listener-group

spring.mvc.pathmatch.matching-strategy = ant_path_matcher

logging.file.path=./config/logs
logging.file.name=${logging.file.path}/tweetApp.log

management.endpoints.web.exposure.include=*
